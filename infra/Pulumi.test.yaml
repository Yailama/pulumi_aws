encryptionsalt: v1:hqeYqzB97ec=:v1:ZUj2N+suS3tuoBOO:gkC7F7mWbmSIgb14oMaSCtEnDbEKTQ==
config:
  aws:region: us-east-1
  cfg:autoscaling_group_size: "2"
  cfg:key_name: "adakopyan"
  cfg:instance_type: "t3a.small"
  cfg:db_name: 'mydb'
  cfg:db_user: 'foo'
  cfg:bucket_name: 'my-bucket'
  cfg:log_group_name: 'my-log-group'
  cfg:load_balancer_sg_name: 'my-lb-sg'
  cfg:vpc_endpoint_security_group_name: 'ses-vpc-endpoint-sg'
  cfg:container_security_group_name: "container-sg"
  cfg:task_execution_role_name: "task-execution-role"
  cfg:ecr_access_policy_name: "ecr-access-policy"
  cfg:ecs_logging_policy: 'ecsloggingpolicy'
  cfg:task_execution_policy_attach: 'task-execution-policy-attach'
  cfg:ecs_instance_role: 'ecs-instance-role'
  cfg:ecs_instance_role_policy_attach: 'ecs-instance-policy-attach'
  cfg:s3_access_policy_attach: 'ecs-instance-s3-full-access'
  cfg:ses_policy: 'ses-policy'
  cfg:ses_access_policy_attach: 'ecs-instance-ses-access'
  cfg:ecs_iam_profile: 'ecs-iam-instance-profile'
  cfg:cluster_name: "my-fancy-new-ecs-cluster"
  cfg:ecs_launch_confing: 'launch-config'
  cfg:autoscale_group: 'auto-scaling'
  cfg:capacity_provider: 'capacity-provider'
  cfg:load_balancer: 'load-balancer'
  cfg:backend_target_group: 'backend-target-group'
  cfg:frontend_target_group: 'frontend-target-group'
  cfg:alb_listener: "web"
  cfg:alb_backend_listener_rule: 'backend-rule'
  cfg:alb_frontend_listener_rule: 'frontend-rule'
  cfg:rds_security_group: 'rds-sg'
  cfg:ecr_repo: 'ecr_repo'
  cfg:app_livecycle_policy: 'app-livecycle-policy'
  cfg:backend_docker_image: 'backend-image'
  cfg:frontend_docker_image: 'frontend-image'
  cfg:rds_instance: 'rds-postgres'
  cfg:s3_vpc_endpoint: 's3-vpc-endpoint'
  cfg:ses_vpc_endpoint: 'ses-vpc-endpoint'
  cfg:email_identity: 'email-identity'
  cfg:email: 'adakopyan@gmail.com'
  cfg:ses_iam: 'my-ses-setup'
  cfg:backend_task_definition: 'backend-app'
  cfg:backend_task_definition_family: 'backend-ec2-task-definition'
  cfg:backend_task_runner: 'backend-runner'
  cfg:frontend_task_definition: 'frontend-app'
  cfg:frontend_task_definition_family: 'frontend-ec2-task-definition'
  cfg:frontend_task_runner: 'frontend-runner'
  cfg:cloudfront_distribution: 'cloudfront-distribution'
  cfg:lambda_iam_role: 'lambda-iam-role'
  cfg:cloudfront_invalidation_policy: 'cloud-front-invalidation-policy'
  cfg:lambda_iam_role_policy_attach: 'lambda-role-policy-attachment'
  cfg:cloudfront_role_policy_attach: 'cloudfront-invalidation-role-policy-attachment'
  cfg:lambda_function_name: 'cache-invalidation-lambda'
  cfg:lambda_invocation: 'lambda-invocation'